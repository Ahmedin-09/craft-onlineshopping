#%RAML 1.0 Extension
extends: ../craftonlineshopping.raml
resourceTypes:
  collection: !include ../Resource/AdminresourceType.raml

/admingetallusers:
  get:
    description: This is an admin privilage to access all users in the database
    responses:
      200:
        body:
          application/json:
            example:
              [{
            "userid": 900,
            "email": "abcdkkk@gmail.com",
            "date_joined": -1573012800000,
            "modified": 1582747201000,
            "type": 1,
            "deleted": false,
            "username": "Abc"
        },
            {
            "userid": 1000,
            "email": "Betty@gmail.com",
            "date_joined": 1589068800000,
            "modified": 1586044800000,
            "type": 5,
            "deleted": false,
            "username": "Cristina"
        }]
              



      #404:
      #  body:
      #    application/json:
      #      example:
      #        {
      #          "message": "Sorry,users Not Found"
      #        }
  type:
    collection:
      resoursepathName: users
      resoursepath: users


      403:
        body:
          application/json:
            example:
              {
                "message": "Forbidden"
              }
      401:
        body:
          application/json:
            example:
              {
                "message":"Unauthorized Person"
              }



  delete:
    description: This one helps the admin to delete/Drop/truncate all the Users from the DB
    responses:
      200:
        body:
          application/json:
            example:
              {
                message: "All User Resourses Deleted"
              }
      #404:
      #  body:
      #    application/json:
      #      example:
      #        {
      #          "message": "Sorry, users Not Found"
      #        }



      403:
        body:
          application/json:
            example:
              {
                "message": "Forbidden"
              }
      401:
        body:
          application/json:
            example:
              {
                "message": "Unauthorized Person"
              }
        
  /{admin-get-users-by-ID}:
    get:
      description: theis Helps the Admin to access a single user via Id
      queryParameters:
        userid:
          type: integer
        
      responses:
        200:
          body:
            application/json:
              example:
               {
            "userid": 900,
            "email": "abcdkkk@gmail.com",
            "date_joined": -1573012800000,
            "modified": 1582747201000,
            "type": 1,
            "deleted": false,
            "username": "Abc"
              }


        404:
          body:
            application/json:
              example:
                {
                "message": "Sorry, user Not Found"
                }
        403:
          body:
            application/json:
              example:
                {
                "message": "Forbidden"
                }
        401:
          body:
            application/json:
              example:
                {
                "message": "Unauthorized Person"
                }



    delete:
      description:

      responses:
        200:
          body:
            application/json:
              example:
                {
                message: "user Deleted"
                }
        404:
          body:
            application/json:
              example:
                {
                "message": "Sorry, user Not Found"
                }
        403:
          body:
            application/json:
              example:
                {
                "message":"Forbidden"
                }
        401:
          body:
            application/json:
              example:
                {
                "message": "Unauthorized Person"
                }

/admin-get-all-products:
  get:
    description: Admin accessing all products
    responses:
      200:
        body:
          application/json:
            example:
              [
                {
      "productid": 0,
      "categoryid": 10,
      "name": "FZA",
      "description": "NEHA",
      "video_url": "www.craft.com",
      "price": 4414
   },
      {
      "productid": 1,
      "categoryid": 15,
      "name": "DELL PC",
      "description": "CORE I 7",
      "video_url": "WWW.DELL.COM",
      "price": 2000
   }
              ]
      404:
        body:
          application/json:
            example:
              {
                "message": "Sorry,Products Not Found"
              }
      403:
        body:
          application/json:
            example:
              {
                "message": "Forbidden"
              }
      401:
        body:
          application/json:
            example:
              {
                "message": "Unauthorized Person"
              }


  post:
    description: in the unlikely event of the admin posting all products at a time
    body:
      application/json:
        example:
          [
            {
      "productid": 0,
      "categoryid": 10,
      "name": "FZA",
      "description": "NEHA",
      "video_url": "www.craft.com",
      "price": 4414
   },
      {
      "productid": 1,
      "categoryid": 15,
      "name": "DELL PC",
      "description": "CORE I 7",
      "video_url": "WWW.DELL.COM",
      "price": 2000
   }
          ]
    responses:
      200:
        body:
          application/json:
            example:
              {"productid": 0,
               1
              }
      201:
        body:
          application/json:
            example:
              {
                message: " Products Posted"
              }

      404:
        body:
          application/json:
            example:
              {
                "message": "Sorry, products Not Found"
              }
      403:
        body:
          application/json:
            example:
              {
                "message": "Forbidden"
              }
      401:
        body:
          application/json:
            example:
              {
                "message": "Unauthorized Person"
              }
          
  put:
    description: I can not imagine a scenario where the admin has to update all the products at a time. Hence [put] is irrelevant here
  delete:
    description: in the highly unlickly scenario of the Admin deleting the products ..
    responses:
      200:
        body:
          application/json:
            example:
              {
                message: "All Product Resourses are Deleted"
              }
      404:
        body:
          application/json:
            example:
              {
                "message": "Sorry,Page Not Found"
              }
      403:
        body:
          application/json:
            example:
              {
                "message": "Forbidden"
              }
      401:
        body:
          application/json:
            example:
              {
                "message": "Unauthorized Person"
              }

  /{admin-get-product-by-ID}:
    get:
      description: Admin accessing a single products by ID
      queryParameters:
        productid:
          type: integer

            
      responses:
        200:
          body:
            application/json:
              example:
                {
      "productid": 0,
      "categoryid": 10,
      "name": "FZA",
      "description": "NEHA",
      "video_url": "www.craft.com",
      "price": 4414
                }
   
        404:
          body:
            application/json:
              example:
                {
                "message": "Sorry,Product Not Found"
                }
        403:
          body:
            application/json:
              example:
                {
                "message": "Forbidden"
                }
        401:
          body:
            application/json:
              example:
                {
                "message": "Unauthorized Person"
                }


    post:
      description: in the event of the admin posting a singlr products at a time
      queryParameters:
        productid:
          type: integer

        categoryid:
          type: integer
        name:
          type: string
        description:
          type: string
        video_url:
          type: string
        price:
          type: integer  

      responses:
        200:
          body:
            application/json:
              example:
                {
      "productid": 0,
      "categoryid": 10,
      "name": "FZA",
      "description": "NEHA",
      "video_url": "www.craft.com",
      "price": 4414
                }


        201:
          body:
            application/json:
              example:
                {
                message: "Product Posted"
                }

        404:
         body:
          application/json:
            example:
              {
                "message": "Sorry, product Not Found"
              }
        403:
          body:
            application/json:
              example:
                {
                "message": "Forbidden"
                }
        401:
          body:
            application/json:
              example:
                {
                "message": "Unauthorized Person"
                }
          
    put:
      description: in the event of the admin updating a singlr products at a time
      queryParameters:
        productid:
          type: integer

        categoryid:
          type: integer
        name:
          type: string
        description:
          type: string
        video_url:
          type: string
        price:
          type: integer  

      responses:
        200:
          body:
            application/json:
              example:
                {
      "productid": 234,
      "categoryid": 109,
      "name": "FZA",
      "description": "NEHA",
      "video_url": "www.craft.com",
      "price": 4414
                }


        201:
          body:
            application/json:
              example:
                {
                message: "Product updated"
                }

        404:
         body:
          application/json:
            example:
              {
                "message": "Sorry, product Not Found"
              }
        403:
          body:
            application/json:
              example:
                {
                "message": "Forbidden"
                }
        401:
          body:
            application/json:
              example:
                {
                "message": "Unauthorized Person"
                }
            



    delete:
      description:  the Admin deleting a products by productID
      queryParameters:
        productid:
          type: integer
        
      responses:
        200:
          body:
            application/json:
              example:
                {
                message: "Product Deleted"
                }
        404:
          body:
            application/json:
              example:
                {
                "message":"Sorry,Page Not Found"
                }
        403:
          body:
            application/json:
              example:
                {
                "message":"Forbidden"
                }
        401:
          body:
            application/json:
              example:
                {
                "message":"Unauthorized Person"
                }
/Admin-get-orders:
  get:
    responses:
      200:
        body:
          application/json:
            example:
              [{
  "orderid": 100,
  "userid": 1000,
  "addressid": 200,
  "discountid": 12,
  "created": 1580601600000,
  "modified": null,
  "status": "shipped",
  "amount": 10000
},
  {
  "orderid": 101,
  "userid": 1001,
  "addressid": 201,
  "discountid": 6,
  "created": 1557923970000,
  "modified": 1557934770000,
  "status": "shipped",
  "amount": 550
}]
      404:
        body:
          application/json:
            example:
              {
                "message":"Sorry,Order Not Found"
              }
      403:
        body:
          application/json:
            example:
              {
                "message":"Forbidden"
              }
      401:
        body:
          application/json:
            example:
              {
                "message":"Unauthorized Person"
              }
    
  /{Admin-get-by-orderuserid}:
    get:
      queryParameters:
        userid:
          type: integer
      responses:
        200:
          body:
            application/json:
              example:
                {
  "orderid": 100,
  "userid": 1000,
  "addressid": 200,
  "discountid": 12,
  "created": 1580601600000,
  "modified": null,
  "status": "shipped",
  "amount": 10000
                }
        404:
          body:
            application/json:
              example:
                {
                "message":"Sorry,order Not Found"
                }
        403:
          body:
            application/json:
              example:
                {
                "message":"Forbidden"
                }
        401:
          body:
            application/json:
              example:
                {
                "message":"Unauthorized Person"
                }
      
  put:
    queryParameters:
      userid:
        type: integer
    responses:
      200:
        body:
          application/json:
            example:
              {
  "orderid": 100,
  "userid": 1000,
  "addressid": 200,
  "discountid": 12,
  "created": 1580601600000,
  "modified": null,
  "status": "shipped",
  "amount": 10000
}
      404:
        body:
          application/json:
            example:
              {
                "message":"Sorry,Page Not Found"
              }
      403:
        body:
          application/json:
            example:
              {
                "message":"Forbidden"
              }
      401:
        body:
          application/json:
            example:
              {
                "message":"Unauthorized Person"
              }
        
      
    
/{Admin-get-order-by-id}:
    get:
      queryParameters:
        orderid:
        type: integer


      responses:
        200:
          body:
            application/json:
              example:
                {
  "orderid": 100,
  "userid": 1000,
  "addressid": 200,
  "discountid": 12,
  "created": 1580601600000,
  "modified": null,
  "status": "shipped",
  "amount": 10000
                }

    
        404:
          body:
            application/json:
             example:
              {
                "message":"Sorry,order Not Found"
              }
        403:
          body:
            application/json:
              example:
                {
                "message":"Forbidden"
                }
        401:
          body:
            application/json:
              example:
                {
                "message":"Unauthorized Person"
                }
      
    put:
      queryParameters:
        orderid:
          type: integer
      responses:
        200:
          body:
            application/json:
              example:
                {
  "orderid": 100,
  "userid": 1000,
  "addressid": 200,
  "discountid": 12,
  "created": 1580601600000,
  "modified": null,
  "status": "shipped",
  "amount": 10000
                }
        404:
          body:
            application/json:
              example:
                {
                "message":"Sorry,order Not Found"
                }
        403:
          body:
            application/json:
              example:
                {
                "message":"Forbidden"
                }
        401:
          body:
            application/json:
              example:
                {
                "message":"Unauthorized Person"
                }

/Admin-get-catagories:
  get:
    responses:
      200:
        body:
          application/json:
            example:
              [
  {
    "categoryid": 10,
    "name": "labtop"
  },
  {
    "categoryid": 11,
    "name": "laptops"
  },
  {
    "categoryid": 12,
    "name": "home electronics"
  }]
      201:
        body:
          application/json:
            example:
              {
                "message": "Catagories are Created"
              }
        
      404:
        body:
          application/json:
            example:
              {
                "message": "Sorry,catagory Not Found"
              }
      403:
        body:
          application/json:
            example:
              {
                "message": "Forbidden"
              }
      401:
        body:
          application/json:
            example:
              {
                "message": "Unauthorized Person"
              }

  post:
    queryParameters:
      categoryid:
        type: integer
        example:
          123
    responses:
      200:
        body:
          application/json:
            example:
              {
    "categoryid": 11,
    "name": "laptops"
              }
      201:
        body:
          application/json:
            example:
              {
                "message": "Catagory Created"
              }

      404:
        body:
          application/json:
            example:
              {
                "message": "Sorry, Page Not Found"
              }
      403:
        body:
          application/json:
            example:
              {
                "message": "Forbidden"
              }
      401:
        body:
          application/json:
            example:
              {
                "message": "Unauthorized Person"
              }
      
              
      
  put:
    description: i dont think this endpoint is relevant for this matter 

  delete:
    description: 
    responses:
      200:
        body:
          application/json:
            example:
              {
                "message": "All catagories are dropped"
              }
      404:
        body:
          application/json:
            example:
              {
                "message": "Sorry,Page Not Found"
              }
      403:
        body:
          application/json:
            example:
              {
                "message": "Forbidden"
              }
      401:
        body:
          application/json:
            example:
              {
                "message": "Unauthorized Person"
              }

  /{Admin-get-catagories-by-ID}:
    get:
      description: 
      queryParameters:
        categoryid:
          type: integer
          example: 123
      responses:
        200:
          body:
            application/json:
              example:
                  {
    "categoryid": 11,
    "name": "laptops"
                  }

        404:
          body:
            application/json:
              example:
                {
                "message": "Sorry,Page Not Found"
                }
        403:
          body:
            application/json:
              example:
                {
                "message": "Forbidden"
                }
        401:
          body:
            application/json:
              example:
                {
                "message": "Unauthorized Person"
                }
  
    post:
      description: 
      queryParameters:
            categoryid:
              type: integer
              example: 1234
            name:
              type: string
              example: "Abe"
      responses:
        200:
          body:
            application/json:
              example:
                {
    "categoryid": 11,
    "name": "laptops"
                  }
        201:
          body:
            application/json:
              example:
                {
                  "Message": "Catagory is Created"
                }

        404:
          body:
            application/json:
              example:
                  {
                "message": "Sorry,Page Not Found"
                  }
        403:
          body:
            application/json:
              example:
                  {
                "message": "Forbidden"
                  }
        401:
          body:
            application/json:
              example:
                  {
                "message": "Unauthorized Person"
                  }

              
                
        
    put:
      description: 
      queryParameters:
            categoryid:
              type: integer
              example: 1234
            name:
              type: string
              example: "Abe"
      responses:
        200:
          body:
            application/json:
              example:
                {
    "categoryid": 12,
    "name": "laptops"
                  }
        201:
          body:
            application/json:
              example:
                {
                  "Message": "Catagory is updated"
                }

        404:
          body:
            application/json:
              example:
                  {
                "message": "Sorry,Page Not Found"
                  }
        403:
          body:
            application/json:
              example:
                  {
                "message": "Forbidden"
                  }
        401:
          body:
            application/json:
              example:
                  {
                "message": "Unauthorized Person"
                  }
    delete:
      description: 
      queryParameters:
            categoryid:
              type: integer
              example: 1234
            
      responses:
        200:
          body:
            application/json:
              example:
                {
                  "message": "Catagory Deleted"
                }

        404:
          body:
            application/json:
              example:
                  {
                "message": "Sorry,Page Not Found"
                  }
        403:
          body:
            application/json:
              example:
                  {
                "message": "Forbidden"
                  }
        401:
          body:
            application/json:
              example:
                  {
                "message": "Unauthorized Person"
                  }
      

    
    
      